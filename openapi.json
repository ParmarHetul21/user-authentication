{
	"openapi": "3.0.0",
	"info": {
		"title": "User Authentication API",
		"version": "1.0.0",
		"description": "User Authentication API",
		"contact": {
			"email": "hetul.parmar@globalvoxinc.com",
			"name": "Hetul Parmar"
		},
		"termsOfService": "Can be userd by anyone"
	},
	"tags": [{ "name": "user", "description": "User operations" }],
	"servers": [
		{
			"url": "http://localhost:3300",
			"description": "Local Server"
		}
	],
	"components": {
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT",
				"description": "Security Scehmas"
			}
		},
		"schemas": {
			"User": {
				"title": "User",
				"properties": {
					"id": {
						"example": "62df6f0580a6e553ca6bb91a",
						"description": "The User ID",
						"nullable": false,
						"type": "string"
					},
					"fullname": {
						"example": "John Doe",
						"description": "Fullname of the user",
						"nullable": false,
						"type": "string"
					},
					"email": {
						"example": "johndoe@gmail.com",
						"description": "Email of the user",
						"nullable": false,
						"type": "string"
					},
					"gender": {
						"example": "male",
						"description": "Gender of the user",
						"nullable": false,
						"type": "string"
					},
					"joindate": {
						"example": "22-07-2022",
						"description": "Date of the user",
						"nullable": false,
						"type": "string"
					},
					"password": {
						"example": "Doe@1243#",
						"description": "Password of the user",
						"nullable": false,
						"type": "string"
					},
					"userimage": {
						"example": "src/upload/2022-07-26T04:35:17.863Zprofile-png-icon-27.jpeg",
						"description": "Image of the User",
						"nullable": false,
						"type": "string"
					}
				}
			}
		},
		"responses": {
			"401": {
				"description": "UnAuthorized",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"additionalProperties": false,
							"properties": {
								"success": {
									"type": "boolean",
									"default": false
								},
								"error": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"message": {
											"type": "string",
											"pattern": "Unauthorized",
											"default": "Unauthorized"
										}
									}
								}
							}
						}
					}
				}
			},
			"404": {
				"description": "Not Found",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"additionalProperties": false,
							"properties": {
								"success": {
									"type": "boolean",
									"default": false
								},
								"error": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"message": {
											"type": "string",
											"default": "Not Found"
										}
									}
								}
							}
						}
					}
				}
			},
			"400": {
				"description": "Bad Request",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"additionalProperties": false,
							"properties": {
								"success": {
									"type": "boolean",
									"default": false
								},
								"error": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"message": {
											"type": "string",
											"default": "Bad Request"
										}
									}
								}
							}
						}
					}
				}
			},
			"500": {
				"description": "Internal Server Error",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"additionalProperties": false,
							"properties": {
								"success": {
									"type": "boolean",
									"default": false
								},
								"error": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"message": {
											"type": "string",
											"default": "Internal Server error"
										}
									}
								}
							}
						}
					}
				}
			},
			"409": {
				"description": "Conflict",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"additionalProperties": false,
							"properties": {
								"success": {
									"type": "boolean",
									"default": false
								},
								"error": {
									"type": "object"
								}
							}
						}
					}
				}
			}
		}
	},
	"paths": {
		"/user/register": {
			"post": {
				"tags": ["user"],
				"description": "user register routes",
				"requestBody": {
					"required": true,
					"description": "request body of register routes",
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"additionalProperties": false,
								"properties": {
									"fullName": {
										"type": "string",
										"format": "string",
										"example": "John Doe",
										"nullable": false
									},
									"email": {
										"type": "string",
										"format": "email",
										"example": "john@doe.com",
										"nullable": false
									},
									"gender": {
										"type": "string",
										"example": "male",
										"nullable": false,
										"format": "string"
									},
									"joinDate": {
										"type": "string",
										"format": "Date",
										"example": "22-08-2022",
										"nullable": false
									},
									"password": {
										"type": "string",
										"format": "string",
										"example": "John@1243#",
										"nullable": false
									},
									"userImage": {
										"type": "string",
										"format": "binary",
										"nullable": false
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "User Created",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"default": false
										},
										"data": {
											"type": "object",
											"additionalProperties": false,
											"properties": {
												"message": {
													"type": "string",
													"description": "User Created"
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"409": {
						"$ref": "#/components/responses/400"
					}
				}
			}
		},
		"/user/login": {
			"post": {
				"description": "user login routes",
				"tags": ["user"],
				"requestBody": {
					"required": true,
					"description": "request body for login",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"additionalProperties": false,
								"properties": {
									"email": {
										"type": "string",
										"format": "email",
										"nullable": false
									},
									"password": {
										"type": "string",
										"format": "password",
										"nullable": false
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "User LoggedIn",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"success": {
											"type": "boolean",
											"default": false
										},
										"data": {
											"type": "object",
											"additionalProperties": false,
											"properties": {
												"fullName": {
													"type": "string",
													"nullable": false
												},
												"email": {
													"type": "string",
													"nullable": false
												},
												"joinDate": {
													"type": "string",
													"nullable": false
												},
												"userImage": {
													"type": "string",
													"nullable": false
												}
											}
										},
										"jwtToken": {
											"type": "string",
											"nullable": false
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"401": {
						"$ref": "#/components/responses/401"
					}
				}
			}
		}
	}
}
